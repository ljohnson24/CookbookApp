@model Cookbook.Core.ViewModels.RecipeManagerViewModel
@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create","RecipeManager", FormMethod.Post, new { encType = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Recipe</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.recipe.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.recipe.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.recipe.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.recipe.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.recipe.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.recipe.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.recipe.Calories, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.recipe.Calories, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.recipe.Calories, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.recipe.ServingSize, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.recipe.ServingSize, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.recipe.ServingSize, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.recipe.Category, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.recipe.Category, new SelectList(Model.recipeCategories, "Category", "Category"), new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.recipe.ingredient10, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.DropDownListFor(model => model.recipe.ingredient1, new SelectList(Model.ingredientTypes, "Type", "Type"), new { htmlAttributes = new { @class = "form-control" } })
            @Html.DropDownListFor(model => model.recipe.ingredient2, new SelectList(Model.ingredientTypes, "Type", "Type"), new { htmlAttributes = new { @class = "form-control" } })
            @Html.DropDownListFor(model => model.recipe.ingredient3, new SelectList(Model.ingredientTypes, "Type", "Type"), new { htmlAttributes = new { @class = "form-control" } })
            @Html.DropDownListFor(model => model.recipe.ingredient4, new SelectList(Model.ingredientTypes, "Type", "Type"), new { htmlAttributes = new { @class = "form-control" } })
            @Html.DropDownListFor(model => model.recipe.ingredient5, new SelectList(Model.ingredientTypes, "Type", "Type"), new { htmlAttributes = new { @class = "form-control" } })
            @Html.DropDownListFor(model => model.recipe.ingredient6, new SelectList(Model.ingredientTypes, "Type", "Type"), new { htmlAttributes = new { @class = "form-control" } })
            @Html.DropDownListFor(model => model.recipe.ingredient7, new SelectList(Model.ingredientTypes, "Type", "Type"), new { htmlAttributes = new { @class = "form-control" } })
            @Html.DropDownListFor(model => model.recipe.ingredient8, new SelectList(Model.ingredientTypes, "Type", "Type"), new { htmlAttributes = new { @class = "form-control" } })
            @Html.DropDownListFor(model => model.recipe.ingredient9, new SelectList(Model.ingredientTypes, "Type", "Type"), new { htmlAttributes = new { @class = "form-control" } })
            @Html.DropDownListFor(model => model.recipe.ingredient10, new SelectList(Model.ingredientTypes, "Type", "Type"), new { htmlAttributes = new { @class = "form-control" } })

        </div>

    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.recipe.instruction1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.recipe.instruction1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.recipe.instruction1, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.recipe.instruction2, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.recipe.instruction2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.recipe.instruction2, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.recipe.instruction3, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.recipe.instruction3, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.recipe.instruction3, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.recipe.instruction4, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.recipe.instruction4, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.recipe.instruction4, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.recipe.instruction5, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.recipe.instruction5, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.recipe.instruction5, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.recipe.instruction6, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.recipe.instruction6, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.recipe.instruction6, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.recipe.instruction7, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.recipe.instruction7, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.recipe.instruction7, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.recipe.instruction8, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.recipe.instruction8, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.recipe.instruction8, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.recipe.instruction9, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.recipe.instruction9, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.recipe.instruction9, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.recipe.instruction10, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.recipe.instruction10, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.recipe.instruction10, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.recipe.Image, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" id="file" name="file" class="form-control" />

        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
